{"version":3,"file":"static/js/465.b6e40085.chunk.js","mappings":"gOAuDA,UAhDA,WACM,IAAMA,GAAWC,EAAAA,EAAAA,MAEbC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAK,eAArCC,EAAO,KAAEC,EAAU,KAC1B,GAA0CF,EAAAA,EAAAA,UAAS,IAAG,eAA/CG,EAAa,KAAEC,EAAgB,KAoBtC,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,yCAAG,+FAKtB,OAJKC,GAAUC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SACzBC,GAAaC,EAAAA,EAAAA,IACjBJ,GACAK,EAAAA,EAAAA,IAAM,WAAY,KAAMd,EAAae,QAAQ,IAAK,OAClD,EAAD,QAC2BC,EAAAA,EAAAA,IAAQJ,GAAY,KAAD,EAAzCK,EAAa,OACfZ,EAAgB,GACpBY,EAAcC,SAAQ,SAACC,GACrBd,EAAce,MAAK,QAAEC,GAAIF,EAAIE,IAAOF,EAAIG,QAC1C,IAEAhB,EAAiBD,GACjBD,GAAW,GAAO,2CACnB,kBAdqB,mCAetBI,GACF,GAAG,CAACR,IAEAG,GACK,SAAC,KAAU,IAES,IAAzBE,EAAckB,QAEd,eAAGC,UAAU,UAAS,UAAC,0BACG,KACxB,iBAAMC,QAAS,kBAAM3B,EAAS,SAAS,EAAC,SAAC,oBAK7C,iBAAK0B,UAAU,aAAY,WACzB,0BAAI,qBAAmBxB,EAAae,QAAQ,IAAK,SACjD,gBAAKS,UAAU,eAAc,SACb,OAAbnB,QAAa,IAAbA,OAAa,EAAbA,EAAeqB,KAAI,SAACC,EAAMC,GAAK,OAC9B,SAAC,IAAQ,CAACD,KAAMA,GAAWC,EAAS,QAK9C,C","sources":["pages/CategoryPage.jsx"],"sourcesContent":["import { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport FeedPost from \"../components/Util-Components/FeedPost\";\r\nimport { PostLoader } from \"../components/Util-Components/Loaders\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction CategoryPage() {\r\n      const navigate = useNavigate();\r\n\r\n  const { CategoryName } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [categoryPosts, setCategoryPosts] = useState([]);\r\n  useEffect(() => {\r\n    const getcategoryBlogs = async () => {\r\n      const blogRef = collection(db, \"blogs\");\r\n      const trendQuery = query(\r\n        blogRef,\r\n        where(\"category\", \"==\", CategoryName.replace(\"_\", \" \"))\r\n      );\r\n      const querySnapshot = await getDocs(trendQuery);\r\n      let categoryPosts = [];\r\n      querySnapshot.forEach((doc) => {\r\n        categoryPosts.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      setCategoryPosts(categoryPosts);\r\n      setLoading(false);\r\n    };\r\n    getcategoryBlogs();\r\n  }, [CategoryName]);\r\n  \r\n  if (loading) {\r\n    return <PostLoader />;\r\n  }\r\n  if (categoryPosts.length === 0) {\r\n    return (\r\n      <p className=\"noposts\">\r\n        No related posts found,{\" \"}\r\n        <span onClick={() => navigate(\"/write\")}>create one.</span>\r\n      </p>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"author-div\">\r\n      <h1> Posts Related to {CategoryName.replace(\"_\", \" \")}</h1>\r\n      <div className=\"author-posts\">\r\n        {categoryPosts?.map((post, index) => (\r\n          <FeedPost post={post} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"names":["navigate","useNavigate","CategoryName","useParams","useState","loading","setLoading","categoryPosts","setCategoryPosts","useEffect","getcategoryBlogs","blogRef","collection","db","trendQuery","query","where","replace","getDocs","querySnapshot","forEach","doc","push","id","data","length","className","onClick","map","post","index"],"sourceRoot":""}